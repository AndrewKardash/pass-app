{"version":3,"sources":["App.js","index.js"],"names":["Toast","props","toast","useToast","pl","pr","size","colorScheme","isDisabled","isLoading","onClick","submit","setTimeout","title","description","status","duration","isClosable","App","state","oldPass","newPass","confirmPass","isOldPasswordInvalid","isNewPasswordInvalid","isConfirmPassInvalid","buttonDisabled","loading","handleSubmit","bind","handleOldPass","handleNewPass","handleConfirmPass","event","this","setState","target","value","h","w","align","ml","mr","direction","as","mt","mb","color","fontSize","isInvalid","type","borderBottomWidth","variant","onChange","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b4920e1.chunk.js","sourcesContent":["import { Button } from \"@chakra-ui/react\"\nimport { Input } from \"@chakra-ui/react\"\nimport React from 'react';\nimport { Flex } from \"@chakra-ui/react\"\nimport { useToast } from \"@chakra-ui/react\"\nimport { Box } from \"@chakra-ui/react\"\nimport { Heading } from \"@chakra-ui/react\"\nimport { Text } from \"@chakra-ui/react\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      oldPass: '',\n      newPass: '',\n      confirmPass: '',\n      isOldPasswordInvalid: false,\n      isNewPasswordInvalid: false,\n      isConfirmPassInvalid: false,\n      buttonDisabled: false,\n      loading: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOldPass = this.handleOldPass.bind(this);\n    this.handleNewPass = this.handleNewPass.bind(this);\n    this.handleConfirmPass = this.handleConfirmPass.bind(this);\n\n  }\n\n  handleOldPass(event) {\n    this.setState({ oldPass: event.target.value });\n    this.setState({ buttonDisabled: false })\n    if (event.target.value === this.state.newPass && event.target.value !== '') {\n      this.setState({ isNewPasswordInvalid: true })\n    } else {\n      this.setState({ isNewPasswordInvalid: false })\n    }\n    if (event.target.value === '') {\n      this.setState({ isOldPasswordInvalid: true })\n    } else {\n      this.setState({ isOldPasswordInvalid: false })\n    }\n  }\n\n  handleNewPass(event) {\n    this.setState({ newPass: event.target.value });\n    this.setState({ buttonDisabled: false })\n    if (event.target.value === this.state.oldPass && event.target.value !== '') {\n      this.setState({ isNewPasswordInvalid: true })\n    } else {\n      this.setState({ isNewPasswordInvalid: false })\n    }\n    if (event.target.value === this.state.confirmPass) {\n      this.setState({ isConfirmPassInvalid: false })\n    }\n    if (event.target.value === '') {\n      this.setState({ isNewPasswordInvalid: true })\n    }\n  }\n\n  handleConfirmPass(event) {\n    this.setState({ buttonDisabled: false })\n    this.setState({ confirmPass: event.target.value });\n    if (event.target.value === this.state.newPass && event.target.value !== '') {\n      this.setState({ isConfirmPassInvalid: false })\n    } else {\n      this.setState({ isConfirmPassInvalid: true })\n    }\n  }\n\n  handleSubmit() {\n    if (this.state.isOldPasswordInvalid === false \n      && this.state.isNewPasswordInvalid === false \n      && this.state.isConfirmPassInvalid === false \n      && this.state.oldPass !== '' \n      && this.state.newPass !== '' \n      && this.state.confirmPass !== '') {\n      this.setState({ loading: true })\n      setTimeout(() => {\n        this.setState({ loading: false })\n      }, 1000);\n      return true\n    } else {\n      this.setState({ buttonDisabled: true })\n      return false\n    }\n  }\n\n  render() {\n    return (\n      <Flex h='100vh' w='600px' align='center' ml='auto' mr='auto'>\n        <Flex direction='column' align='center'>\n          <Heading as=\"h1\" size=\"lg\">CREATE YOUR NEW PASSWORD</Heading>\n          <Box mt='50px' mb='50px' w='600px'>\n            <Text color='grey' fontSize=\"xl\">Old password</Text>\n            <Input isInvalid={this.state.isOldPasswordInvalid}\n              type='password'\n              color='grey'\n              borderBottomWidth='2px'\n              variant='flushed'\n              value={this.state.oldPass}\n              onChange={this.handleOldPass} />\n            <Text color='grey' fontSize=\"xl\">New Password</Text>\n            <Input isInvalid={this.state.isNewPasswordInvalid}\n              type='password'\n              color='grey'\n              borderBottomWidth='2px'\n              variant='flushed'\n              value={this.state.newPass}\n              onChange={this.handleNewPass} />\n            <Text color='grey' fontSize=\"xl\">Confirm new password</Text>\n            <Input isInvalid={this.state.isConfirmPassInvalid}\n              type='password'\n              color='grey'\n              borderBottomWidth='2px'\n              variant='flushed'\n              value={this.state.confirmPass}\n              onChange={this.handleConfirmPass} />\n          </Box>\n          <Toast isDisabled={this.state.buttonDisabled}\n            submit={this.handleSubmit}\n            isLoading={this.state.loading}>\n          </Toast>\n        </Flex >\n      </Flex>\n    );\n  }\n}\n\nfunction Toast(props) {\n  const toast = useToast();\n  return (\n    <Button\n      pl = '50px'\n      pr = '50px'\n      size='lg'\n      colorScheme='messenger'\n      isDisabled={props.isDisabled}\n      isLoading={props.isLoading}\n      onClick={() => {\n        if (props.submit()) {\n          setTimeout(() => toast({\n            title: 'Password changed.',\n            description: \"We've changed your password for you.\",\n            status: 'success',\n            duration: 9000,\n            isClosable: true,\n          }), 1000)\n        }\n      }\n      }\n    >\n      SAVE CHANGES\n    </Button>\n  )\n}\n\nexport default App;\n","import { ChakraProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}